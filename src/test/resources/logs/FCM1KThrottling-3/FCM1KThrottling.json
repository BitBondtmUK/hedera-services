{
    "payloadConfig" :{
        "appendSig"     : true,
        "insertSeq"     : true,
        "variedSize"    : false,
        "enableCheck"   : false,
        "_comment"      : "payload type TYPE_RANDOM_BYTES for random bytes",
        "type"          : "TYPE_RANDOM_BYTES",

        "payloadByteSize"   : 100,
        "maxByteSize"       : 100,

        "distribution" :{
            "sizeDistribution" : [ 100 ],
            "ratioDistribution": [ 100],
            "typeDistribution" : [  "TYPE_FCM_TEST"]
        }
    },
    "submitConfig" :{
        "_comment0" : [ "0,  BYTES_PER_SECOND_PER_NODE",
                        "1,  TRANS_PER_SECOND_PER_NODE",
                        "2,  EVENTS_PER_SECOND_WHOLE_NETWORK",         "hard to control and achieve",
                        "3,  ROUNDS_PER_SECOND_WHOLE_NETWORK",
                        "4,  TRANS_PER_EVENT_WHOLE_NETWORK",           "more like low bound",
                        "5,  C2C_LATENCY" ],

        "systemMetric"  : "TRANS_PER_SECOND_PER_NODE",
        "metricThreshold" : 2500.0,

        "_comment1"         : "pause after submit defined amount of transactions",
        "pauseAfter"        : 0,
        "pauseSeconds"      : 30,
        "allowRunSubmit"    : true,

        "enableThrottling"    : true,
        "tpsMap"       : {
            "TYPE_FCM_CREATE_BLOB"   : 40.0,
            "TYPE_FCM_UPDATE_BLOB"   : 10.0,
            "TYPE_FCM_APPEND_BLOB" : 30.0,
            "TYPE_FCM_DELETE_BLOB"   : 15.0
          },

        "C2CDelayThreshold" : 6
    },

    "fcmConfig" :{
        "sequentialTest" :  true,
        "_comment"    : "if sequentialTest is true, generate payload according to sequentialType, sequentialAmoutn, sequentialSize, this override typeDistribution defined in payloadConfig",

        "sequentialType"   : [  "TYPE_FCM_CREATE_BLOB" , "TYPE_FCM_UPDATE_BLOB", "TYPE_FCM_APPEND_BLOB", "TYPE_FCM_DELETE_BLOB"],
        "sequentialAmount" : [  5000,               2000,            4000,              1000 ],
        "sequentialSize"   : [  100,                 100,              100,                100  ]
    }

}
